services:
  server:
    container_name: django-server
    build:
      context: .
    ports:
      - 8000:8000
    depends_on:
      - db
      - redis
      - minio
      - createbucket
      - mailhog
    env_file:
      - .env
    develop:
      watch:
        - action: sync
          path: .
          target: ./app
          ignore:
            - .venv/
        - action: rebuild
          path: ./pyproject.toml

  db:
    container_name: db
    image: postgres
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - PGUSER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - 5432:5432
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celery:
    container_name: celery
    build:
      context: .
    restart: always
    command: uv run celery -A core.celery.app worker --pool=prefork --beat -l info
    depends_on:
      - db
      - redis
      - server
    volumes:
      - .:/celery
    env_file:
      - .env

  minio:
    container_name: minio
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    volumes:
      - minio_data:/data
    command: server /data --address :9000 --console-address :9001

  createbucket:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add --api s3v4 s3 http://minio:9000 minio minio123;
      /usr/bin/mc mb s3/uploads/;
      /usr/bin/mc anonymous set download s3/uploads;
      "

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"

volumes:
  db-data:
  minio_data:
  redis_data:
  static_volume:
  celery:
